<?
// Set up convenience variables:
$account = $this->auth()->getManager();
$user = $account->isLoggedIn();
$openUrl = $this->openUrl($this->driver, 'holdings');
$openUrlActive = $openUrl->isActive();
$urls = $this->record($this->driver)->getLinkDetails($openUrlActive);
$offlineMode = $this->ils()->getOfflineMode();
//$hasItemHoldings = $this->tab->hasItemHoldings();
//$hasJournalHoldings = $this->tab->hasJournalHoldings();
//$hasIlsOrJournalHoldings = $this->tab->hasIlsOrJournalHoldings();


// Set page title.
$this->headTitle($this->translate('Holdings') . ': ' . $this->driver->getBreadcrumb());
?>
<? if ($offlineMode == "ils-offline"): ?>
  <div class="sysInfo">
    <h2><?=$this->transEsc('ils_offline_title')?></h2>
    <p><strong><?=$this->transEsc('ils_offline_status')?></strong></p>
    <p><?=$this->transEsc('ils_offline_holdings_message')?></p>
    <? $supportEmail = $this->escapeHtml($this->systemEmail()); ?>
    <p><a href="mailto:<?=$supportEmail?>"><?=$supportEmail?></a></p>
  </div>
<? endif; ?>


<?php
/*
<? if (($this->ils()->getHoldsMode() == 'driver' && !empty($holdings)) || $this->ils()->getTitleHoldsMode() == 'driver'): ?>
  <? if ($account->loginEnabled() && $offlineMode != 'ils-offline'): ?>
    <? if (!$user): ?>
      <div class="info akInfoHoldings">
        <a href="<?=$this->currentPath()?>?login=true&catalogLogin=true"><?=$this->transEsc("Login")?></a> <?=$this->transEsc("hold_login")?>
      </div>
    <? elseif (!$user->cat_username): ?>
      <div class="info">
        <?=$this->translate("hold_profile_html", array('%%url%%' => $this->currentPath() . '?catalogLogin=true'))?>
      </div>
    <? endif; ?>
  <? endif; ?>
<? endif; ?>
*/
?>

<?php
/*
<? $holdingTitleHold = $this->driver->tryMethod('getRealTimeTitleHold'); if (!empty($holdingTitleHold)): ?>
    <a class="holdPlace" href="<?=$this->recordLink()->getHoldUrl($holdingTitleHold)?>"><?=$this->transEsc('title_hold_place')?></a>
<? endif; ?>
*/
?>

<? if (!empty($urls)): ?>
  <h3><?=$this->transEsc("Internet")?></h3>
  <? if (!empty($urls)): ?>
    <? foreach ($urls as $current): ?>
      <a href="<?=$this->escapeHtml($this->proxyUrl($current['url']))?>" target="new"><?=$this->escapeHtml($this->transEsc($current['desc']))?></a><br/>
    <? endforeach; ?>
  <? endif; ?>
  <? if ($openUrlActive): ?><?=$openUrl->renderTemplate()?><? endif; ?>
<? endif; ?>


<?php
/* ########################### JOURNAL HOLDINGS ########################### */
// Get journal holdings from API
$journalHoldings = $this->driver->getJournalHoldings();

if (! empty($journalHoldings)) {

    // Get no of holdings
    $noOfHolings = count($journalHoldings);

    echo '<br /><h3>' . $this->transEsc('journalHoldingsText') . '</h3><br />';

    foreach ($journalHoldings as $key => $journalHolding) {

        echo '<table class="table" style="width: auto;">';
        if ($noOfHolings > 1) {
            echo '<tr>';
            echo '<th colspan="2" style="text-align: center; border-top: 0px; margin-top: 5px;">' . $this->translate('Bestand') . ' ' .$key . '</th>';
            echo '</tr>';
        }
        if (!empty($journalHolding['holding'])) {
            echo '<tr>';
            echo '<th style="white-space: nowrap;">' . $this->transEsc('journalHoldings') . ':</th>';
            echo '<td width="99%">' . $journalHolding['holding'] . '</td>';
            echo '</tr>';
        }
        if (!empty($journalHolding['gaps'])) {
            echo '<tr>';
            echo '<th style="white-space: nowrap;">' . $this->transEsc('gaps') . ':</th>';
            echo '<td width="99%">' . $journalHolding['gaps'] . '</td>';
            echo '</tr>';
        }
        if (!empty($journalHolding['location'])) {
            echo '<tr>';
            echo '<th style="white-space: nowrap;">' . $this->transEsc('Location') . ':</th>';
            echo '<td width="99%">' . $journalHolding['location'] . '</td>';
            echo '</tr>';
        }
        if (!empty($journalHolding['shelfmark'])) {
            echo '<tr>';
            echo '<th style="white-space: nowrap;">' . $this->transEsc('Call Number') . ':</th>';
            echo '<td width="99%">' . $journalHolding['shelfmark'] . '</td>';
            echo '</tr>';
        }
        if (!empty($journalHolding['comment'])) {
            echo '<tr>';
            echo '<th style="white-space: nowrap;">' . $this->transEsc('comment') . ':</th>';
            echo '<td width="99%">' . $journalHolding['comment'] . '</td>';
            echo '</tr>';
        }
        echo '</table>';
    }
}

// Pausing for some microseconds to avoid errors caused by too many API-Calls at the same time. 500000 microseconds = 0,5 seconds
usleep(500000);

/*########################### ITEM HOLDINGS ###########################*/
// Get item holdings from API
$holdings = $this->driver->getRealTimeHoldings();

if (! empty($holdings)) {

    $showLoadMore = false;
    $noOfItemsToLoad = ($this->driver->getAkConfig()->MaxItemsLoad->maxItemsLoad) ? $this->driver->getAkConfig()->MaxItemsLoad->maxItemsLoad : 10;

    foreach ($holdings as $location => $holdingsOfLocation) {

        // Check if it is possible that there could be more holdings. This is the case if the first (current) holding call already returns the max. no.
        // of items specified by the user in AKsearch.ini. If we reached the max. no of items, we will check if there really are more holdings and, if yes,
        // we will display a "show more" button.
        $noOfCurrentIlsHoldings = count($holdingsOfLocation['items']);
        if ($noOfCurrentIlsHoldings == $noOfItemsToLoad) {
            $noOfTotalItems = ($holdingsOfLocation['totalNoOfItems']) ? $holdingsOfLocation['totalNoOfItems'] : null;
            $showLoadMore = $this->driver->showLoadMore($noOfTotalItems);
        }

        echo '<br /><h3>' . $this->transEsc('itemHoldingsText') . ': ' . $this->transEsc($location) . '</h3><br />';
        echo '(Bestand: '. $this->driver->getLocalInventory()[0] . ')<br />';
        echo '(LÃ¼cken: '. $this->driver->getLocalInventoryGaps()[0] . ')<br />';

        // Check for second call number (for label in table heading) and some other values
        $hasSecondCallNo = false;
        $hasDescription = false;
        $hasLink = false;
        foreach ($holdingsOfLocation['items'] as $holdingOfLocation) {
            if (isset($holdingOfLocation['callnumber_second']) && ! empty(trim($holdingOfLocation['callnumber_second']))) {
                $hasSecondCallNo = true;
            }
            if (isset($holdingOfLocation['description']) && ! empty(trim($holdingOfLocation['description']))) {
                $hasDescription = true;
            }
            if (isset($holdingOfLocation['link'])) {
                $hasLink = true;
            }
        }

        echo '<table class="table" summary="' . $this->transEsc('Holdings details from') . ' ' . $this->transEsc($location) . '">';

        echo '<tr>';
        echo '<th>' . $this->transEsc('Call Number') . '</th>';
        echo ($hasSecondCallNo) ? '<th>' . $this->transEsc('Call Number 2') . '</th>' : ''; // If there is a second call no, show an additional table column
        echo '<th>' . $this->transEsc('Location') . '</th>';
        echo ($hasDescription) ? '<th>' . $this->transEsc('Description') . '</th>' : ''; // If there is a description, show an additional table column
        echo '<th>' . $this->transEsc('Status') . '</th>';
        echo '<th>' . $this->transEsc('availability') . '</th>';
        echo (($this->ils()->getHoldsMode() == 'driver' || $this->ils()->getTitleHoldsMode() == 'driver')) ? '<th>' . $this->transEsc('hold_place') . '</th>' : '';
        echo '</tr>';

        foreach ($holdingsOfLocation['items'] as $holdingOfLocation) {
            $check = (isset($holdingOfLocation['check']) && $holdingOfLocation['check']);

            // Call Numbers (first and second)
            $callNoFirst = (isset($holdingOfLocation['callnumber']) && ! empty(trim($holdingOfLocation['callnumber']))) ? $holdingOfLocation['callnumber'] : $this->transEsc('n. A.');
            $callNoSecond = (isset($holdingOfLocation['callnumber_second']) && ! empty(trim($holdingOfLocation['callnumber_second']))) ? $holdingOfLocation['callnumber_second'] : $this->transEsc('n. A.');

            if (isset($holdingOfLocation['barcode']) && ! empty(trim($holdingOfLocation['barcode']))) {
                echo '<tr>';
                echo '<td>' . $callNoFirst . '</td>';
                echo ($hasSecondCallNo) ? '<td>' . $callNoSecond . '</td>' : ''; // If there is a second call no, show an additional table column
                echo '<td>' . ((isset($holdingOfLocation['collection'])) ? $holdingOfLocation['collection'] : $this->transEsc('n. A.')) . '</td>';
                echo ($hasDescription) ? '<td>' . ((isset($holdingOfLocation['description'])) ? $holdingOfLocation['description'] : $this->transEsc('n. A.')) . '</td>' : ''; // If there is a description, show an additional table column
                echo '<td>' . ((isset($holdingOfLocation['status'])) ? $holdingOfLocation['status'] : $this->transEsc('n. A.')) . '</td>';

                // Show status of item
                echo '<td>';
                if ($holdingOfLocation['reserve'] == "Y") {
                    echo $this->transEsc("On Reserve - Ask at Circulation Desk");
                } elseif (isset($holdingOfLocation['use_unknown_message']) && $holdingOfLocation['use_unknown_message']) {
                    echo $this->transEsc("status_unknown_message");
                } else { // Begin Available Items (Holds)
                    if ($holdingOfLocation['availability']) {
                        echo '<div>';
                        echo '<span class="available">' . $this->transEsc("Available") . '</span> ';

                        /*
                        // Link for placing a hold
                        if (isset($holdingOfLocation['link']) && $holdingOfLocation['link']) {
                                $checkClass = $check ? ' checkRequest' : '';
                                $checkText = $check ? 'Check Hold' : 'Place a Hold';
                                echo '<a class="holdPlace' . $checkClass . '" href="' . $this->recordLink()->getHoldUrl($holdingOfLocation['link']) . '"><span>' . $this->transEsc($checkText) . '</span></a>';
                        }
                        */
                        echo '</div>';
                    } else { // Begin Unavailable Items (Recalls)
                        echo '<div>';

                        // Information-Text:
                        echo '<span class="checkedout">';
                        if (isset($holdingOfLocation['returnDate']) && $holdingOfLocation['returnDate']) {
                            echo '<span class="statusExtra">' . $this->escapeHtml($holdingOfLocation['returnDate']) . '</span>';
                        }

                        if (isset($holdingOfLocation['duedate']) && $holdingOfLocation['duedate']) {
                            if ($holdingOfLocation['duedate'] == 'requested') {
                                echo '<span class="statusExtra">' . $this->transEsc($this->escapeHtml($holdingOfLocation['duedate'])) . '</span>';
                            } else {
                                echo '<span class="statusExtra">' . $this->transEsc("Due") . ': ' . $this->transEsc($this->escapeHtml($holdingOfLocation['duedate'])) . '</span>';
                            }
                        }

                        if (isset($holdingOfLocation['requests_placed']) && $holdingOfLocation['requests_placed'] > 0) {
                            echo '<span class="statusExtra">' . $this->transEsc("Requests") . ': ' . $this->escapeHtml($holdingOfLocation['requests_placed']) . '</span>';
                        }

                        if ((!isset($holdingOfLocation['duedate']) || !$holdingOfLocation['duedate']) && (!isset($holdingOfLocation['requests_placed']) || !$holdingOfLocation['requests_placed']) && (!isset($holdingOfLocation['returnDate']) || !$holdingOfLocation['returnDate'])) {
                            echo '<span class="statusExtra">' . $this->transEsc("not_available_at_the_moment") . '</span>';
                        }
                        echo '</span>';

                        /*
                        // Link for request:
                        if (isset($holdingOfLocation['link']) && $holdingOfLocation['link']) {
                                $checkClass = $check ? ' checkRequest' : '';
                                $checkText = $check ? 'Check Recall' : 'Recall This';
                                echo '<a class="holdPlace' . $checkClass . '" href="' . $this->recordLink()->getHoldUrl($holdingOfLocation['link']) . '"><span>' . $checkText . '</span></a>';
                        }
                        */
                        echo '</div>';
                    }
                    echo '</td>';
                    echo '<td>';
                    //echo '<span><i class="fa fa-exclamation-triangle smallTriangle" aria-hidden="true"></i>&nbsp;Systemumstieg!&nbsp;<i class="fa fa-exclamation-triangle smallTriangle" aria-hidden="true"></i><br />Bestellungen erst wieder ab 8.1.2018 mÃ¶glich.</span>';

                    if (($this->ils()->getHoldsMode() == 'driver' || $this->ils()->getTitleHoldsMode() == 'driver')) {
                        if ($account->loginEnabled() && $offlineMode != 'ils-offline') {
                            if (!$user) {
                                // Link for login
                                echo '<a href="'.$this->url('myresearch-userlogin').'" class="akOpenLogin btn btn-default clear-btn" title="'.$this->transEsc("Login").'">'.$this->transEsc("Login").'</a>';
                            } elseif (!$user->cat_username) {
                                echo $this->translate("hold_profile_html", array('%%url%%' => $this->currentPath() . '?catalogLogin=true'));
                            } else {
                                // Link for placing a hold

                                if (isset($holdingOfLocation['link']) && $holdingOfLocation['link']) {
                                    // Use this if we check if the request is valid in checkRequestIsValidAjax (PHP class AkSearch\Controller\AkAjaxController and JS checkRequestIsValid in record.aksearch.js)
                                    //$checkClass = $check ? ' checkRequest' : '';
                                    //$checkText = $check ? 'Check Hold' : 'Place a Hold';
                                    //echo '<a class="btn btn-default clear-btn holdPlace' . $checkClass . '" href="' . $this->recordLink()->getHoldUrl($holdingOfLocation['link']) . '"><span>' . $this->transEsc($checkText) . '</span></a>';

                                    $holdButtonText = $this->transEsc('Place a Hold');
                                    if (isset($holdingOfLocation['holdtype']) && $holdingOfLocation['holdtype'] == 'reserve') {
                                        $holdButtonText = $this->transEsc('Recall This');
                                        echo $this->transEsc('AskLibraryStaff');
                                    }else {
                                        echo '<a class="btn btn-default clear-btn holdPlace" href="' . $this->recordLink()->getHoldUrl($holdingOfLocation['link']) . '"><span>' . $this->transEsc($holdButtonText) . '</span></a>';
                                    }
                                } else {
                                    if (isset($holdingOfLocation['get_from_readingroom']) && $holdingOfLocation['get_from_readingroom'] == true) {
                                        echo $this->transEsc('GetFromReadingRoom');
                                    } else {
                                        echo $this->transEsc('AskLibraryStaff');
                                    }
                                }
                            }
                        } else {
                            echo $this->transEsc('login_disabled');
                        }
                    }

                    echo '</td>';
                    echo '</tr>';

                }
            }
        }

        echo '</table>';

        if ($showLoadMore) {
            // echo '<div class="akLoadMore" id="akLoadMoreItems"><i class="fa fa-spinner fa-spin" id="akLoadMoreItemsSpinner"></i>&nbsp;<a href="">'.$this->transEsc('loadMore').'</a></div>';
            echo '<div class="akLoadMore"><a href="' . $this->recordLink()->getUrl($this->driver) . '/Holdings?loadAll" id="akLoadMoreItems">' . $this->transEsc('loadMore') . '&nbsp;<i class="fa fa-chevron-down" aria-hidden="true"></i></a></div>';
            // echo '<div class="akLoadMore"><a href="#" id="akLoadMoreItems">'.$this->transEsc('loadMore').'</a></div>';
        }
    }
}


if (empty($holdings) && empty($journalHoldings) && empty($urls)) {
    echo '<br /><h3>' . $this->transEsc('akNoHoldings') . '</h3><br />';
}

?>


<? $history = $this->driver->getRealTimeHistory(); ?>
<? if (is_array($history) && !empty($history)): ?>
<h3><?=$this->transEsc("Most Recent Received Issues")?></h3>
<ul>
  <? foreach ($history as $row): ?>
    <li><?=$this->escapeHtml($row['issue'])?></li>
  <? endforeach; ?>
</ul>
<? endif; ?>
