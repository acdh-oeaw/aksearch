[Masking]
; Mask all call numbers (callno 1 and callno 2) and collections (including description) beginning with the  
; given prefixes by *. This applies to Holdings-Tab. Use comma-separated list if more than one prefixe should
; be used. If one prefix includes nother, the first one will be taken. You can also define exceptions.
; Example:
;       beginswith = A, AA, LN
; ABT includes A. A comes first and will be used instead of ABT.
; Examples for result with "beginswith = A, AA, LN" and "beginswithExceptions = AB, Test"
;       A34.B56 would become A******
;   	AAA.546 would become A****** (if "A" would be after "AA" in the rule, it would become AA*****)
;       LN12345 would become LN*****
;       AB12345 would become AB12345 (because "beginswithExceptions" contains "AB")
; Example:
beginswith = A, B, C


; You can also define marcfields and solrfields that should be masked. This applies to staff view. Append [all] or [begins] to indicate
; if the whole value should be masked (no matter if it begins with one of the "beginswith" values specified above or not), or if the value
; should be masked according only if it begins with one of the "beginswith" values specified above.
; Examples:
;	marcfields = AVA$**$c[begins], AVA$**$j[all], Z30$**$2[all]
;	solrfields = locationCode_str_mv[all], location_txtF[begins]


[User]
; Allow users to change their user data (eMail, phone) in Aleph. If set to true, an appropriate
; form is shown in the account settings of the logged in user. Otherwise, set to false.
change_userdata = true


[HideItems]
; Hide items as specified below. You can choose between the following options:
; id, status (use description and put it within quotes, not the status number), location (use location code), callnumber, callnumber_second, barcode, collection (use collection description, not collection code)
; Example: Hide item(s) if status is "Loan (from stock)":
status = "Loan (from stock)"


[AlephItemStatus]
; Comma-separated list of item statuses.
; Info: The setting "available_statuses" in "Aleph.ini" uses the "Item process status" (= Ex-Gesch√§ftsgangstatus) of Aleph.
;        If you need to use the "Item status" (Exemplarstatus) for availability, you should use this setting here.
;        Note that this setting checks for item statuses that tell us that the item is NOT available
; Example:
not_available_item_statuses = ordered, missed, bookbinder


[CustomAdvancedFacet]
; You can define one or more additional facet selectboxes on the advanced search screen here.
; Use like this:
;	Label[] = solrfield, value, displaytext 
; An explanation:
;	Label[]			is the heading for the selectbox.
;	solrfield		is the solrfield on which the facet or, better to say, filter, should be applied
;	value			is the value that we want to look for in the solrfield
;	displaytext		is the text that is displayed in the selectbox
; For each entry in one selectbox, use the same value on the left side of the equals sign (in our example this would be "Label[]") and different
; descriptions on the right side of the equals sign.
; Examples:
;	SpecialCollections[] = collection, old_books, "Old Books"
;	SpecialCollections[] = keyword, Economics, "Books on economics"


[SearchListFacetInfo]
; You can add an Info-Tooltip to a facet heading. This is useful if a facet might be unclear for the users so you can explain it there.
; Format: FacetField[InfoTooltipHeading] = InfoTooltipText
;	FacetField: Comes from [Results] section in facets.ini. Take the value on the left side there. It has to be exactly the same!
;	InfoTooltipHeading: This heading (title) appears in the tooltip. Use only a shortcut here and translate it in your language files.
;	InfoTooltipText: This text appears in the tooltip. Use only a shortcut here and translate it in your language files.
; Example:
;	genre_facet[GenreInfoHeading] = GenreInfoText


[BrowseCatalogueNoNumbers]
; For the given catagories in browseNoNumbers[], no numbers will be shown in the list for alphabetical browsing.
; Use the word in the last part of the URL for the category.
;	Example: If the URL is "https://aksearch/Browse/Topic", use the following line for this setting:
;	browseNoNumbers[] = Topic
; For multiple categories, use multiple lines:
;	browseNoNumbers[] = Topic
browseNoNumbers[] = Author
;	browseNoNumbers[] = Genre


[MaxItemsLoad]
; You can set the max no of items shown in the holdings tab of a record. This can be useful if a record has a lot of items and loading their info
; from the Aleph API takes a long time (bad user experience). If you define this setting to e. g. 3, only 3 items will be loaded and a "load more ..."
; link will be shown so that the user can load all other items. You can set this to "all" if you want to always show all items. If you omit this
; setting, the default value of 10 will be used by AKsearch.
; Please be aware: The check if more items should be loaded is not done on a per location basis, but on all items of all locations. So if you have
; multiple locations, this setting could lead to unexpected behaviour.
; Example:
maxItemsLoad = 3


[NewItemsSort]
; Specify if you want to show the relevance sort option on new items search or not. Mayby you want to disable it because this search option seems
; useless with new items search.
; Also specify the default search option that should be used when starting a new items search. Use on of the search options (values on the left side)
; specified in the file "searches.ini" in section [Sorting]
; Example:
;	relevance = false
;	default = title


[NewItemsFilter]
; Here you can define a filter for the new items search. This could be interessting if you want to offer you users a search for new items in, for
; example, only items that have a specific keyword or classification. E. g.: Find all new items with keyword "economy".
; Info: you should translate the "solrfield" and the "filtervalue" in the language files for appropriate facet display.
; Use like this: label[] = solrfield, filtervalue, filterlabel
;	label[]			is the heading of the selectbox
;	solrfield		is the solrfield to which the filter should apply
;	filtervalue		is the value that should be filtered
;	filterlabel		is the value for the filtervalue that appears in the selctbox
; It is possible to define more that one filter by defining multiple label[] objects. If you do so, for each same label[] object, one selectfield will
; be displayed. An example:
; 	label[] = solrfield, filtervalue, filterlabel
; 	label[] = solrfield, filtervalue, filterlabel
; 	otherlabel[] = solrfield, filtervalue, filterlabel
; 	otherlabel[] = solrfield, filtervalue, filterlabel
; 	otherlabel[] = solrfield, filtervalue, filterlabel

